@page "/"
@using BlazorApp1.Data
@using BlazorApp1.Services
@inject IPokeAPIService APIService

<h3>Guess the Pokémon!</h3>

<div>
    <label for="userInput">Type the Pokémon's name:</label>
    <input id="userInput" @bind="@userInput" placeholder="Enter Pokémon name here" />
    <button @onclick="CheckAnswer">Submit</button>
</div>

@if (!string.IsNullOrEmpty(feedbackMessage))
{
    <div style="color: @feedbackColor;">
        @feedbackMessage
    </div>
}

@if (currentPokemon != null)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th class="col-1">Id</th>
                <th class="col-1">First Letter</th>
                <th class="col-6">Name</th>
                <th class="col-10">Types</th>
            </tr>
        </thead>
        <tbody>
            <PokemonTableRow pokemon="@currentPokemon" />
        </tbody>
    </table>
}

<h4>Guesses</h4>
<ul>
    @foreach (Guess guess in guesses)
    {
        <li style="color: @(guess.IsCorrect ? "black" : "red")">
            @(char.ToUpper(guess.Pokemon.Name[0]) + guess.Pokemon.Name.Substring(1).ToLower())
            @if (!guess.IsCorrect)
            {
                <span> (Your answer: @guess.UserGuess)</span>
            }
        </li>
    }
</ul>

@code
{
    private Pokemon currentPokemon; 
    private string userInput = ""; 
    private string feedbackMessage = ""; 
    private string feedbackColor = "black"; 
    private List<Guess> guesses = new List<Guess>(); 

    protected override async Task OnInitializedAsync()
    {
        await FetchRandomPokemon();
    }

    private async Task FetchRandomPokemon()
    {
        int totalPokemon = await APIService.GetPokemonCount();
        var randomId = new Random().Next(1, totalPokemon + 1);

        currentPokemon = await APIService.GetPokemon(randomId);

        userInput = "";
        feedbackMessage = "";
        feedbackColor = "black";
    }

    private async Task CheckAnswer()
    {
        string normalizedUserInput = userInput.Trim().Replace("-", "").ToLower();
        string normalizedPokemonName = currentPokemon.Name.Replace("-", "").ToLower();

        bool isCorrect = normalizedUserInput == normalizedPokemonName;

        guesses.Add(new Guess
            {
                Pokemon = currentPokemon,
                UserGuess = userInput,
                IsCorrect = isCorrect
            });


        await FetchRandomPokemon();
    }
}
